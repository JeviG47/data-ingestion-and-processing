{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "onetwenty-user-adf"
		},
		"ls_ablob_onetwentyusersa_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_ablob_onetwentyusersa'"
		},
		"ls_adls_onetwentyuserdl_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_onetwentyuserdl'"
		},
		"ls_sql_user_db_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sql_user_db'"
		},
		"ls_adls_onetwentyuserdl_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://onetwentyuserdl.dfs.core.windows.net/"
		},
		"ls_http_onetwentyuser_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://app-fake-data-api.azurewebsites.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/RunPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CSV Data Ingestion",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_execute_user_data_pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "REST API Data Ingestion",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_execute_api_user_data_pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CSV Data Ingestion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_sqlize_user_data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "REST API Data Ingestion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_sqlize_user_data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Execute"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-24T22:02:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_execute_user_data_pipeline')]",
				"[concat(variables('factoryId'), '/pipelines/pl_execute_api_user_data_pipeline')]",
				"[concat(variables('factoryId'), '/pipelines/pl_sqlize_user_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_execute_api_user_data_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Ingest User Data",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ingest_user_data_api",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Process User Data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Ingest User Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_processed_api_user_data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Execute"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-24T22:02:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ingest_user_data_api')]",
				"[concat(variables('factoryId'), '/pipelines/pl_processed_api_user_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_execute_user_data_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Ingest User Data",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ingest_user_data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Process User Data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Ingest User Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_processed_user_data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Execute"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-24T22:02:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ingest_user_data')]",
				"[concat(variables('factoryId'), '/pipelines/pl_processed_user_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_user_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Check if file exists",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_user_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.00:30:00",
							"sleep": 10
						}
					},
					{
						"name": "Get File Metadata",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Check if file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_user_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"exists",
								"size"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Column Count Matches",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get File Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Get File Metadata').output.columnCount, 4)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incompatible File",
										"errorCode": "500"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy User Data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_user_csv",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_user_dl_csv",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Delete File",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Copy User Data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_user_csv",
											"type": "DatasetReference",
											"parameters": {}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "ls_ablob_onetwentyusersa",
												"type": "LinkedServiceReference"
											},
											"path": ""
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Ingest"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-24T19:20:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_user_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_user_dl_csv')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_ablob_onetwentyusersa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_user_data_api')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy User Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_user_http_json",
								"type": "DatasetReference",
								"parameters": {
									"relativeURL": {
										"value": "@pipeline().parameters.sourceRelativeURL",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_user_http_dl_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"sourceRelativeURL": {
						"type": "string",
						"defaultValue": "api/dummy-data-api?code=gIT9c1hNoycFEXaK3vNXAUAUJ5aTFXPunD4jwS5_aJfgAzFuI-8Qmg=="
					},
					"sinkFileName": {
						"type": "string",
						"defaultValue": "user_data"
					}
				},
				"folder": {
					"name": "Ingest"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-24T20:10:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_user_http_json')]",
				"[concat(variables('factoryId'), '/datasets/ds_user_http_dl_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_processed_api_user_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ds_transformed_api_user_data",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transform_api_user_data",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"FirstNameSource": {},
									"Sink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Process"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-24T21:35:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_transform_api_user_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_processed_user_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ds_transformed_user_data",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transform_user_data",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"FirstNameSource": {},
									"UserSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Process"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-24T19:20:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_transform_user_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sqlize_user_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy User Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE Users",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "email",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "first_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "first_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "last_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "last_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "signup_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "signup_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "signup_month"
										},
										"sink": {
											"name": "signup_month",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "signup_year"
										},
										"sink": {
											"name": "signup_year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "interests",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "interests",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_processed_user_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql_user_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "SQLize"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-24T19:20:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_processed_user_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql_user_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_processed_api_user_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_onetwentyuserdl",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "processed"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "processed",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_onetwentyuserdl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_processed_user_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_onetwentyuserdl",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "processed"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "processed",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_onetwentyuserdl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_raw_api_user_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_onetwentyuserdl",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "user_data",
						"folderPath": "api",
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_onetwentyuserdl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_raw_user_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_onetwentyuserdl",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "user_data.csv",
						"folderPath": "user",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "email",
						"type": "String"
					},
					{
						"name": "signup_date",
						"type": "String"
					},
					{
						"name": "interests",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_onetwentyuserdl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_user_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_user_db",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "email",
						"type": "nvarchar"
					},
					{
						"name": "first_name",
						"type": "nvarchar"
					},
					{
						"name": "last_name",
						"type": "nvarchar"
					},
					{
						"name": "signup_date",
						"type": "date"
					},
					{
						"name": "signup_month",
						"type": "nvarchar"
					},
					{
						"name": "signup_year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "interests",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Users"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_user_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_user_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ablob_onetwentyusersa",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "user_data.csv",
						"container": "user"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ablob_onetwentyusersa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_user_dl_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_onetwentyuserdl",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "user_data.csv",
						"folderPath": "user",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_onetwentyuserdl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_user_http_dl_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_onetwentyuserdl",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "user_data"
					}
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "api",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_onetwentyuserdl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_user_http_dl_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_onetwentyuserdl",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "user_data",
						"folderPath": "api",
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_onetwentyuserdl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_user_http_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_http_onetwentyuser",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relativeURL": {
						"type": "string",
						"defaultValue": "api/dummy-data-api?code=gIT9c1hNoycFEXaK3vNXAUAUJ5aTFXPunD4jwS5_aJfgAzFuI-8Qmg=="
					}
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().relativeURL",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_http_onetwentyuser')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_ablob_onetwentyusersa')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_ablob_onetwentyusersa_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_onetwentyuserdl')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_onetwentyuserdl_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_onetwentyuserdl_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_http_onetwentyuser')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_http_onetwentyuser_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sql_user_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_sql_user_db_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_ingest_user_data')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "RunPipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2024-03-24T10:53:00",
						"timeZone": "GMT Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/RunPipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_transform_api_user_data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_raw_api_user_data",
								"type": "DatasetReference"
							},
							"name": "FirstNameSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_processed_api_user_data",
								"type": "DatasetReference"
							},
							"name": "Sink"
						}
					],
					"transformations": [
						{
							"name": "Name"
						},
						{
							"name": "split1"
						},
						{
							"name": "DateTransformation"
						},
						{
							"name": "Year"
						},
						{
							"name": "select1"
						},
						{
							"name": "IntereststoString"
						}
					],
					"scriptLines": [
						"source(output(",
						"          email as string,",
						"          interests as string[],",
						"          name as string,",
						"          signup_date as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine',",
						"     partitionBy('hash', 1)) ~> FirstNameSource",
						"IntereststoString derive(first_name = split(name, ' ')[1],",
						"          last_name = split(name, ' ')[2]) ~> Name",
						"Name split(regexMatch(email,`^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$`),",
						"     disjoint: false) ~> split1@(validEmail, InvalidEmail)",
						"split1@validEmail derive(signup_month = month(signup_date)) ~> DateTransformation",
						"DateTransformation derive(signup_year = year(signup_date)) ~> Year",
						"Year select(mapColumn(",
						"          first_name,",
						"          last_name,",
						"          email,",
						"          signup_date,",
						"          signup_month,",
						"          signup_year,",
						"          interests",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"FirstNameSource derive(interests = replace(replace(replace(toString(interests), '[', ''), ']', ''), '\"', '')) ~> IntereststoString",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['processed_user_data'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> Sink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_raw_api_user_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_processed_api_user_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_transform_user_data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_raw_user_data",
								"type": "DatasetReference"
							},
							"name": "FirstNameSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_processed_user_data",
								"type": "DatasetReference"
							},
							"name": "UserSink",
							"rejectedDataLinkedService": {
								"referenceName": "ls_adls_onetwentyuserdl",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "Name"
						},
						{
							"name": "split1"
						},
						{
							"name": "DateTransformation"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          name as string,",
						"          email as string,",
						"          signup_date as string,",
						"          interests as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> FirstNameSource",
						"FirstNameSource derive(first_name = split(name, ' ')[1],",
						"          last_name = split(name, ' ')[2]) ~> Name",
						"Name split(regexMatch(email,`^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$`),",
						"     disjoint: false) ~> split1@(validEmail, InvalidEmail)",
						"derivedColumn1 derive(signup_month = month(signup_date)) ~> DateTransformation",
						"split1@validEmail derive(signup_date = toDate(signup_date, 'dd-MM-yyyy')) ~> derivedColumn1",
						"DateTransformation derive(signup_year = year(signup_date)) ~> derivedColumn2",
						"derivedColumn2 select(mapColumn(",
						"          name,",
						"          email,",
						"          signup_date,",
						"          interests,",
						"          first_name,",
						"          last_name,",
						"          signup_month,",
						"          signup_year",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['processed_user_data'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     dateFormat:'dd/MM/yyyy',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> UserSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_raw_user_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_processed_user_data')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_onetwentyuserdl')]"
			]
		}
	]
}