{
	"name": "df_transform_api_user_data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_api_user_data",
						"type": "DatasetReference"
					},
					"name": "UserDataAPISource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_processed_api_user_data",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "NameTransformation"
				},
				{
					"name": "split1"
				},
				{
					"name": "DateTransformation"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine',",
				"     partitionBy('hash', 1)) ~> UserDataAPISource",
				"UserDataAPISource derive(interests = replace(replace(replace(toString(interests), '[', ''), ']', ''), '\"', '')) ~> NameTransformation",
				"NameTransformation split(regexMatch(email,`^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$`),",
				"     disjoint: false) ~> split1@(validEmail, InvalidEmail)",
				"split1@validEmail derive(signup_date = concat(split(signup_date,'-')[3],'/',split(signup_date,'-')[2],'/',split(signup_date,'-')[1])) ~> DateTransformation",
				"DateTransformation sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}