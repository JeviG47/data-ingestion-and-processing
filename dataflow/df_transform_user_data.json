{
	"name": "df_transform_user_data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_user_data",
						"type": "DatasetReference"
					},
					"name": "FirstNameSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_processed_user_data",
						"type": "DatasetReference"
					},
					"name": "UserSink",
					"rejectedDataLinkedService": {
						"referenceName": "ls_adls_onetwentyuserdl",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "Name"
				},
				{
					"name": "split1"
				},
				{
					"name": "DateTransformation"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          name as string,",
				"          email as string,",
				"          signup_date as string,",
				"          interests as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> FirstNameSource",
				"FirstNameSource derive(first_name = split(name, ' ')[1],",
				"          last_name = split(name, ' ')[2]) ~> Name",
				"Name split(regexMatch(email,`^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$`),",
				"     disjoint: false) ~> split1@(validEmail, InvalidEmail)",
				"split1@validEmail derive(signup_month = split(signup_date, '-')[2],",
				"          signup_year = split(signup_date, '-')[3]) ~> DateTransformation",
				"DateTransformation select(mapColumn(",
				"          first_name,",
				"          last_name,",
				"          email,",
				"          signup_date_transformed,",
				"          signup_month,",
				"          signup_year,",
				"          interests",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['processed_user_data'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     dateFormat:'dd/MM/yyyy',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> UserSink"
			]
		}
	}
}